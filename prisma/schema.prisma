// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Competition {
  id        Int                     @id @default(autoincrement())
  name      String                  @db.Text
  startDate DateTime                @db.Timestamp()
  endDate   DateTime                @db.Timestamp()
  athletes  AthletesOnCompetition[]
  games     Game[]

  @@unique([name, startDate, endDate])
}

enum AthleteClass {
  BC1
  BC2
  BC3
  BC4
}

model Athlete {
  id             Int                     @id @default(autoincrement())
  firstName      String                  @db.Text
  lastName       String                  @db.Text
  patronymicName String?                 @db.Text
  region         String                  @db.Text
  score          Int                     @default(0)
  class          AthleteClass
  competitions   AthletesOnCompetition[]
  gamesRed       Game[]                  @relation("GamePlayerRed")
  gamesBlue      Game[]                  @relation("GamePlayerBlue")
}

model AthletesOnCompetition {
  athlete       Athlete     @relation(fields: [athleteId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  athleteId     Int
  competition   Competition @relation(fields: [competitionId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  competitionId Int

  @@id([athleteId, competitionId])
}

enum GameStatus {
  CREATED
  STARTED
  FINISHED
}

model Game {
  id            Int          @id @default(autoincrement())
  class         AthleteClass
  status        GameStatus   @default(CREATED)
  competition   Competition  @relation(fields: [competitionId], references: [id])
  competitionId Int
  redAthlete    Athlete      @relation("GamePlayerRed", fields: [redAthleteId], references: [id])
  redAthleteId  Int
  blueAthlete   Athlete      @relation("GamePlayerBlue", fields: [blueAthleteId], references: [id])
  blueAthleteId Int
  redScore      Int          @default(0)
  blueScore     Int          @default(0)
  round         Int          @default(0)
}
